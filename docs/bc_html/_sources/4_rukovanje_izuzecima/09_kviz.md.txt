# Квиз

## Питање 1

```{mchoice}
:answer1: Изузетак настаје када се унесе кôд који нарушава синтаксна правила програмског језика.
:answer2: Изузетак се детектује и отклања приликом компајлирања програма.
:answer3: Изузетак настаје током извршавања програма када се стекну специфични услови.
:answer4: Неисправан хардвер не може да изазове изузетак.
:correct: 3

Означи тачан исказ.
```

## Питање 2

```{fitb}
:answer: try,catch,finally

Допуни празнине у следећим реченицама. Кôд у програму који може бацити изузетак
треба поставити у |blank| блоку. Кôд у програму помоћу којег се обрађује бачени
изузетак треба поставити у |blank| блоку. Кôд у програму који се извршава без
обзира да ли је изузетак бачен или не треба поставити у |blank| блоку.
```

## Питање 3

```cs
try
{
    int x = 0, y = 1 / x;
}
catch (Exception)
{
    Console.Write("Prvi.");
}
catch (ArithmeticException)
{
    Console.Write("Drugi.");
}
finally 
{
    Console.Write("Najzad.");
}
```

```{mchoice}
:answer1: Приказаће се текст Prvi.
:answer2: Приказаће се текст Drugi.
:answer3: Приказаће се текст Najzad.
:answer4: Ништа. Компајлер ће јавити грешку.
:correct: 4

Шта ће се приказати у конзоли након извршавања датог кода?
```

## Питање 4

```{mchoice}
:answer1: изузетак основне Exception класе може хватати у било ком catch блоку.
:answer2: изузетак основне Exception класе мора хватати у последњем catch блоку.
:answer3: изузетак основне Exception класе мора хватати у првом catch блоку.
:answer4: јавља грешка, јер се изузетак основне Exception класе не сме комбиновати са изузецима класа изведених из ње.
:correct: 2

Ако `try-catch` конструкција има више `catch` блокова у којима се хватају изузеци
`Exception` класе и осталих класа изведених из класе `Exception`, онда се:
```

## Питање 5

```{mchoice}
:answer1: try блок мора имати бар један catch или један finally блок.
:answer2: try блок мора имати бар један catch и један finally блок.
:answer3: try блок мора имати бар један catch блок.
:answer4: try блок мора имати бар један finally блок.
:answer5: try блок може имати више catch блокова.
:answer6: try блок може имати више finally блокова.
:correct: 1,5

Ако се говори о руковању изузецима, који су од наведених исказа тачни?
```

## Питање 6

```cs
static void Validacija(int x)
{
    if (x <= 0)
    {
        throw new ArgumentException("x mora biti vece od nule.");
    }
    Console.WriteLine("x je vece od nule.");
}
```

```{mchoice}
:answer1: Метода се треба позвати у finally блоку.
:answer2: Метода се треба позвати у catch блоку.
:answer3: Метода се треба позвати у try блоку.
:answer4: Метода се може позвати било где у главном програму.
:correct: 3

Под претпоставком да се у `catch` блоку у `try-catch-finally` конструкцији у
главном програму хватају изузеци основне `Exception` класе, где се треба позвати
дата метода, да не би дошло до рушења програма када је `x<=0`?
```

## Питање 7

```{mchoice}
:answer1: треба користити throw e, где је e објекат класе Exception
:answer2: треба користити throw без аргумената
:answer3: треба користити rethrow без аргумената
:answer4: треба користити угнежђени try блок
:correct: 2

Ако треба поново бацити изузетак који је већ ухваћен у `catch` блоку, онда...
```

## Питање 8

```{mchoice}
:answer1: Изузетке треба користити као механизам за контролу тока програма.
:answer2: Треба избегавати обраду специфичних, а фаворизовати обраду општих изузетака.
:answer3: Након баченог и ухваћеног изузетка, потребна је и обрада изузетка.
:answer4: Обраду изузетака треба користити приликом сваке радње, јер изузеци не утичу на перформансе програма.
:correct: 3

Означи тачан исказ.
```

## Питање 9

```{mchoice}
:answer1: Изузетак не сме да се појави у finally блоку.
:answer2: Изузетак не сме да се појави у catch блоку.
:answer3: Изузетак не сме да се појави у try блоку.
:answer4: Изузетак не сме да се појави у главном програму, тј. у методи Main().
:correct: 1

Где изузетак не сме да се појави?
```

## Питање 10

```{mchoice}
:answer1: Фајл треба да затвори у finally блоку.
:answer2: Фајл треба да затвори у catch блоку, приликом обраде изузетка.
:answer3: Фајл треба да затвори такође у try блоку, где је и покушао да га отвори.
:answer4: Фајл може да затвори у било ком блоку, јер затварање фајла не изазива изузетке.
:correct: 1

Програмер развија апликацију која ради са текстуалним фајлом, па зато води
рачуна о могућим изузецима приликом отварања текстуалног фајла. Фајл отвара
у `try` блоку `try-catch-finally` конструкције. У ком блоку треба да затвори
фајл?
```
